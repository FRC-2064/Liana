name: Build & Release Windows Installer

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Tag and Version
        run: |
          $tag = "${{ github.ref }}" -replace "refs/tags/",""
          $version = $tag -replace "v",""
          echo "RELEASE_TAG=$tag" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "APP_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "Building version: $version"
        shell: pwsh

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Build Flutter App
        run: flutter build windows --release

      - name: Compile .ISS to .EXE Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.7
        with:
          path: "installer/windows-installer.iss"
          options: /DAPP_VERSION=${{ env.APP_VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: installer/Output/*.exe
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Frozen Release Branch
        run: |
          $tagName = "${{ env.RELEASE_TAG }}"
          $branchName = "release/" + $tagName.Substring(1)

          echo "Creating release branch: $branchName"

          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions@github.com"

          git branch $branchName $tagName
          git push origin $branchName

          echo "Release branch created successfully"
        shell: pwsh
